import React, { useState, useEffect } from "react";
import axios from "axios";

const BoardAdmin = () => {
  const [activeTab, setActiveTab] = useState("home");
  const [carList, setCarList] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [modalMessage, setModalMessage] = useState(null); // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [savedData, setSavedData] = useState([]);

  const [expandedFile, setExpandedFile] = useState(null);
  const [fileDetails, setFileDetails] = useState([]);


  const fetchFileDetails = async (fileName) => {
    // –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Ç—É –∂–µ –∫–Ω–æ–ø–∫—É —Å–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫
    setExpandedFile(fileName === expandedFile ? null : fileName);
    if (fileName !== expandedFile) {
      try {
        const tokenData = JSON.parse(localStorage.getItem("user"));
        const token = tokenData?.token;
        const response = await axios.get(
            `http://localhost:8089/api/cars/get-file/${fileName}`,
            {
              headers: {
                Authorization: `Bearer ${token}`,
              },
            }
        );
        setFileDetails(response.data);
      } catch (err) {
        setModalMessage(
            `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞ "${fileName}": ${err.message}`
        );
      }
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –º–∞—à–∏–Ω
  const fetchCarList = async () => {
    setLoading(true);
    setError(null);
    try {
      const tokenData = JSON.parse(localStorage.getItem("user"));
      const token = tokenData?.token;
      const response = await axios.get(
          "http://localhost:8089/api/cars/list-parser",
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
      );
      setCarList(response.data);
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –º–∞—à–∏–Ω.");
    } finally {
      setLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
  const handleDelete = async (fileName) => {
    const confirmDelete = window.confirm(
        `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª "${fileName}"?`
    );
    if (confirmDelete) {
      try {
        const tokenData = JSON.parse(localStorage.getItem("user"));
        const token = tokenData?.token;
        const response = await axios.delete(
            `http://localhost:8089/api/cars/delete-file/${fileName}`,
            {
              headers: {
                Authorization: `Bearer ${token}`,
              },
            }
        );
        setModalMessage(`–§–∞–π–ª "${fileName}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.`);
        fetchCarList(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
      } catch (err) {
        setModalMessage(
            `–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ "${fileName}": ${err.message}`
        );
      }
    }
  };

  // –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
  const handleDownload = async (fileName) => {
    try {
      const tokenData = JSON.parse(localStorage.getItem("user"));
      const token = tokenData?.token;
      const response = await axios.get(
          `http://localhost:8089/api/cars/download-car-info/${fileName}`,
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
            responseType: "blob", // –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
          }
      );

      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const url = window.URL.createObjectURL(new Blob([response.data]));
      const link = document.createElement("a");
      link.href = url;
      link.setAttribute("download", fileName); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    } catch (err) {
      setModalMessage(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ "${fileName}": ${err.message}`);
    }
  };

  const [formData, setFormData] = useState({
    carBrand: "",
    carModel: "",
    dateStart: "",
    dateMax: "",
    countPages: "",
    saveToDb: false,
  });

  const [responseMessage, setResponseMessage] = useState(null);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleChange = (field, value) => {
    setFormData((prevData) => ({
      ...prevData,
      [field]: value,
    }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setResponseMessage(null);
    setSavedData([]); // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–æ–º

    try {
      const tokenData = JSON.parse(localStorage.getItem("user"));
      const token = tokenData?.token;

      // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–æ—Ä–º—ã –≤ lowercase
      const lowercaseParams = {
        carBrand: formData.carBrand?.toLowerCase() || "",
        carModel: formData.carModel?.toLowerCase() || "",
        dateStart: formData.dateStart?.toLowerCase() || "",
        dateMax: formData.dateMax?.toLowerCase() || "",
        countPages: formData.countPages?.toString().toLowerCase() || "",
      };

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∑–∞–ø—Ä–æ—Å–∞
      const url = formData.saveToDb
          ? "http://localhost:8089/api/cars/save-car-data"
          : "http://localhost:8089/api/cars/data-car-date";

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω—É–∂–Ω—ã–π URL
      const response = await axios.get(url, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
        params: lowercaseParams,
      });

      setSavedData(response.data);

      if (formData.saveToDb) {
        setResponseMessage("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.");
      } else {
        setResponseMessage("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω—ã.");
      }
    } catch (err) {
      setResponseMessage(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${err.message}`);
    } finally {
      setLoading(false);
    }
  };

  const handleTabChange = (tab) => {
    setActiveTab(tab);
    if (tab === "cars") {
      fetchCarList();
    }
  };

  useEffect(() => {
    fetchCarList();
  }, []);

  return (
      <div className="container-fluid vh-100 d-flex">
        {/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */}
        <div className="col-2 bg-light text-dark p-3">
          <ul className="nav flex-column">
            <li
                className={`nav-item p-2 ${activeTab === "home" ? "bg-primary text-white" : ""}`}
                onClick={() => handleTabChange("home")}
            >
              <span className="nav-link curs-pointer">–ì–ª–∞–≤–Ω–∞—è</span>
            </li>
            <li
                className={`nav-item p-2 ${activeTab === "cars" ? "bg-primary text-white" : ""}`}
                onClick={() => handleTabChange("cars")}
            >
              <span className="nav-link curs-pointer">–î–∞–Ω–Ω—ã–µ –æ –º–∞—à–∏–Ω–∞—Ö</span>
            </li>
            <li
                className={`nav-item p-2 ${activeTab === "add-cars" ? "bg-primary text-white" : ""}`}
                onClick={() => handleTabChange("add-cars")}
            >
              <span className="nav-link curs-pointer">–î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –º–∞—à–∏–Ω–∞—Ö</span>
            </li>
          </ul>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className="col-10 p-4">
        {activeTab === "home" && (
            <div className="container mt-4">
                <div className="row align-items-center">
                    <div className="col-md-6 mb-4">
                        <h2 className="mb-3">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!</h2>
                        <p className="lead">
                            –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–º–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö, –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ —Å –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏
                            –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤.
                        </p>
                        <ul className="list-group mb-4">
                            <li className="list-group-item">
                                <strong>üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏:</strong> –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ, —Å–∫–∞—á–∏–≤–∞–π—Ç–µ –∏ —É–¥–∞–ª—è–π—Ç–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏.
                            </li>
                            <li className="list-group-item">
                                <strong>üåê –ü–∞—Ä—Å–∏–Ω–≥:</strong> –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –º–∞—Ä–∫–µ, –º–æ–¥–µ–ª–∏ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω—É –ª–µ—Ç.
                            </li>
                            <li className="list-group-item">
                                <strong>‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:</strong> –≤—Ä—É—á–Ω—É—é –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏–ª–∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ–æ—Ä–º—É.
                            </li>
                            <li className="list-group-item">
                                <strong>üìä –ê–Ω–∞–ª–∏–∑:</strong> –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ ML/—Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º.
                            </li>
                        </ul>
                    </div>
                    <div className="col-md-6 text-center">
                        <img
                            src="https://i.ibb.co.com/chw0PhfF/image.png"
                            alt="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
                            className="img-fluid rounded shadow"
                        />
                    </div>
                </div>
            </div>
        )}

          {activeTab === "cars" && (
              <div>
                <h1>–§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –æ –º–∞—à–∏–Ω–∞—Ö</h1>

                {loading && <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>}
                {error && <p className="text-danger">{error}</p>}

                {!loading && !error && (
                    <table className="table table-bordered table-striped">
                      <thead>
                      <tr>
                        <th>–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞</th>
                        <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                        <th>–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–±–∞–π—Ç—ã)</th>
                        <th>–û–ø–µ—Ä–∞—Ü–∏–∏</th>
                      </tr>
                      </thead>
                      <tbody>
                      {carList.map((file, index) => (
                          // –ò—Å–ø–æ–ª—å–∑—É–µ–º React.Fragment, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å
                          // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –ø–æ–¥ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å—å—é
                          <React.Fragment key={index}>
                            <tr>
                              <td>{file.fileName}</td>
                              <td>{new Date(file.creationDate).toLocaleString()}</td>
                              <td>{file.fileSize}</td>
                              <td>
                                <button
                                    className="btn btn-danger btn-sm marg-r-20"
                                    onClick={() => handleDelete(file.fileName)}
                                >
                                  –£–¥–∞–ª–∏—Ç—å
                                </button>
                                <button
                                    className="btn btn-primary btn-sm marg-r-20"
                                    onClick={() => handleDownload(file.fileName)}
                                >
                                  –°–∫–∞—á–∞—Ç—å
                                </button>
                                <button
                                    className="btn btn-info btn-sm"
                                    onClick={() => fetchFileDetails(file.fileName)}
                                >
                                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                                </button>
                              </td>
                            </tr>

                            {/* –ï—Å–ª–∏ —Ñ–∞–π–ª "—Ä–∞–∑–≤—ë—Ä–Ω—É—Ç", –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø. —Å—Ç—Ä–æ–∫—É —Å–æ —Å–≤–µ–¥–µ–Ω–∏—è–º–∏ */}
                            {expandedFile === file.fileName && (
                                <tr>
                                  {/* colSpan —Ä–∞–≤–µ–Ω –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–æ–∫–µ */}
                                  <td colSpan="4">
                                    {/* –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å "–ó–∞–≥—Ä—É–∑–∫–∞..." –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å fileDetails.length == 0.
                                –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ fileDetails –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –ø—Ä–∏—à—ë–ª, –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ. */}
                                    {fileDetails && fileDetails.length > 0 ? (
                                        <table className="table table-bordered mt-3">
                                          <thead>
                                          <tr>
                                            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                                            <th>–ì–æ–¥</th>
                                            <th>–¶–µ–Ω–∞</th>
                                            <th>–ü—Ä–æ–±–µ–≥</th>
                                            <th>–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è</th>
                                            <th>–¢–æ–ø–ª–∏–≤–æ</th>
                                            <th>–ö—É–∑–æ–≤</th>
                                            <th>–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è</th>
                                            <th>–°—Å—ã–ª–∫–∞</th>
                                            <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
                                          </tr>
                                          </thead>
                                          <tbody>
                                          {fileDetails.map((car, idx) => (
                                              <tr key={idx}>
                                                <td>{car.Title}</td>
                                                <td>{car.Year}</td>
                                                <td>{car.Price}</td>
                                                <td>{car.Mileage}</td>
                                                <td>{car.EngineVolume}</td>
                                                <td>{car.Fuel}</td>
                                                <td>{car.ConditionBody}</td>
                                                <td>{car.Transmission}</td>
                                                <td>
                                                  <a
                                                      href={car.Link}
                                                      target="_blank"
                                                      rel="noopener noreferrer"
                                                  >
                                                    –ü–µ—Ä–µ–π—Ç–∏
                                                  </a>
                                                </td>
                                                <td>{car.RawDescription}</td>
                                              </tr>
                                          ))}
                                          </tbody>
                                        </table>
                                    ) : (
                                        <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.</p>
                                    )}
                                  </td>
                                </tr>
                            )}
                          </React.Fragment>
                      ))}
                      </tbody>
                    </table>
                )}

                {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è */}
                {modalMessage && (
                    <div className="modal show d-block" tabIndex="-1">
                      <div className="modal-dialog">
                        <div className="modal-content">
                          <div className="modal-header">
                            <h5 className="modal-title">–°–æ–æ–±—â–µ–Ω–∏–µ</h5>
                            <button
                                type="button"
                                className="btn-close"
                                onClick={() => setModalMessage(null)}
                            ></button>
                          </div>
                          <div className="modal-body">
                            <p>{modalMessage}</p>
                          </div>
                          <div className="modal-footer">
                            <button
                                type="button"
                                className="btn btn-secondary"
                                onClick={() => setModalMessage(null)}
                            >
                              –ó–∞–∫—Ä—ã—Ç—å
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                )}
              </div>
          )}

          {activeTab === "add-cars" && (
              <div>
                <h1>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö</h1>
                <a href="https://kolesa.kz/" className="text-decoration-none">
                  –î–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è —Å —Å–∞–π—Ç–∞ kolesa.kz
                </a>
                <form onSubmit={handleSubmit}>
                  <div className="form-group">
                    <label htmlFor="carBrand">–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</label>
                    <input
                        type="text"
                        className="form-control"
                        id="carBrand"
                        value={formData.carBrand}
                        onChange={(e) => handleChange("carBrand", e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä Toyota"
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="carModel">–ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è</label>
                    <input
                        type="text"
                        className="form-control"
                        id="carModel"
                        value={formData.carModel}
                        onChange={(e) => handleChange("carModel", e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä –°amry"
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="dateStart">–ù–∞—á–∞–ª—å–Ω—ã–π –≥–æ–¥</label>
                    <input
                        type="number"
                        className="form-control"
                        id="dateStart"
                        value={formData.dateStart}
                        onChange={(e) => handleChange("dateStart", e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π –≥–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä 2001"
                        min="1950"
                        max={new Date().getFullYear()}
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="dateMax">–ö–æ–Ω–µ—á–Ω—ã–π –≥–æ–¥</label>
                    <input
                        type="number"
                        className="form-control"
                        id="dateMax"
                        value={formData.dateMax}
                        onChange={(e) => handleChange("dateMax", e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—ã–π –≥–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä 2025"
                        min="1950"
                        max={new Date().getFullYear()}
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="countPages">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü</label>
                    <input
                        type="number"
                        className="form-control"
                        id="countPages"
                        value={formData.countPages}
                        onChange={(e) => handleChange("countPages", e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü, –Ω–∞–ø—Ä–∏–º–µ—Ä 7"
                    />
                  </div>
                  <div className="form-check">
                    <input
                        type="checkbox"
                        className="form-check-input"
                        id="saveToDb"
                        checked={formData.saveToDb}
                        onChange={(e) => handleChange("saveToDb", e.target.checked)}
                    />
                    <label className="form-check-label" htmlFor="saveToDb">
                      –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–∞–∑—É –î–∞–Ω–Ω—ã—Ö
                    </label>
                  </div>
                  <button type="submit" className="btn btn-primary mt-3">
                    –°–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                  </button>

                  {/* –ü–æ–∫–∞–∑ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
                  {loading && (
                      <div className="text-center mt-3">
                        <div className="spinner-border text-primary" role="status">
                          <span className="sr-only">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                        </div>
                      </div>
                  )}

                  {/* –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ –∏–ª–∏ –æ—à–∏–±–∫–µ */}
                  {responseMessage && (
                      <div className="alert alert-info mt-3" role="alert">
                        {responseMessage}
                      </div>
                  )}
                </form>

                {/* –ò—Ç–æ–≥–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö */}
                {savedData.length > 0 && (
                    <div className="mt-5">
                      <h3>–ò—Ç–æ–≥–æ–≤–∞—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤ –ë–î</h3>
                      <table className="table table-bordered table-striped">
                        <thead>
                        <tr>
                          <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                          <th>–ì–æ–¥</th>
                          <th>–¶–µ–Ω–∞</th>
                          <th>–ü—Ä–æ–±–µ–≥</th>
                          <th>–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è</th>
                          <th>–¢–æ–ø–ª–∏–≤–æ</th>
                          <th>–ö—É–∑–æ–≤</th>
                          <th>–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è</th>
                          <th>–°—Å—ã–ª–∫–∞</th>
                          <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
                        </tr>
                        </thead>
                        <tbody>
                        {savedData.map((car, index) => (
                            <tr key={index}>
                              <td>{car.Title}</td>
                              <td>{car.Year}</td>
                              <td>{car.Price}</td>
                              <td>{car.Mileage}</td>
                              <td>{car.EngineVolume} –ª</td>
                              <td>{car.Fuel}</td>
                              <td>{car.ConditionBody}</td>
                              <td>{car.Transmission}</td>
                              <td>
                                <a href={car.Link} target="_blank" rel="noopener noreferrer">
                                  –ü–µ—Ä–µ–π—Ç–∏
                                </a>
                              </td>
                              <td>{car.RawDescription}</td>
                            </tr>
                        ))}
                        </tbody>
                      </table>
                    </div>
                )}
              </div>
          )}
        </div>
      </div>
  );
};

export default BoardAdmin;
